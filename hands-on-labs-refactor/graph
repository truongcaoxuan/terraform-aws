digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] aws_eip.res_eip (expand)" [label = "aws_eip.res_eip", shape = "box"]
		"[root] aws_iam_policy.policy (expand)" [label = "aws_iam_policy.policy", shape = "box"]
		"[root] aws_instance.aws_linux (expand)" [label = "aws_instance.aws_linux", shape = "box"]
		"[root] aws_instance.ubuntu_server (expand)" [label = "aws_instance.ubuntu_server", shape = "box"]
		"[root] aws_instance.web_server (expand)" [label = "aws_instance.web_server", shape = "box"]
		"[root] aws_internet_gateway.res_igw (expand)" [label = "aws_internet_gateway.res_igw", shape = "box"]
		"[root] aws_key_pair.generated (expand)" [label = "aws_key_pair.generated", shape = "box"]
		"[root] aws_nat_gateway.res_natgw (expand)" [label = "aws_nat_gateway.res_natgw", shape = "box"]
		"[root] aws_route_table.res_private_rtb (expand)" [label = "aws_route_table.res_private_rtb", shape = "box"]
		"[root] aws_route_table.res_public_rtb (expand)" [label = "aws_route_table.res_public_rtb", shape = "box"]
		"[root] aws_route_table_association.private (expand)" [label = "aws_route_table_association.private", shape = "box"]
		"[root] aws_route_table_association.public (expand)" [label = "aws_route_table_association.public", shape = "box"]
		"[root] aws_security_group.ingress-ssh (expand)" [label = "aws_security_group.ingress-ssh", shape = "box"]
		"[root] aws_security_group.sg-dynamic-web-traffic-local (expand)" [label = "aws_security_group.sg-dynamic-web-traffic-local", shape = "box"]
		"[root] aws_security_group.sg-dynamic-web-traffic-var (expand)" [label = "aws_security_group.sg-dynamic-web-traffic-var", shape = "box"]
		"[root] aws_security_group.vpc-ping (expand)" [label = "aws_security_group.vpc-ping", shape = "box"]
		"[root] aws_security_group.vpc-web (expand)" [label = "aws_security_group.vpc-web", shape = "box"]
		"[root] aws_subnet.res_privates (expand)" [label = "aws_subnet.res_privates", shape = "box"]
		"[root] aws_subnet.res_publics (expand)" [label = "aws_subnet.res_publics", shape = "box"]
		"[root] aws_subnet.res_var_subnet (expand)" [label = "aws_subnet.res_var_subnet", shape = "box"]
		"[root] aws_subnet.var_subnet_for_each (expand)" [label = "aws_subnet.var_subnet_for_each", shape = "box"]
		"[root] aws_subnet.var_subnet_for_each_map (expand)" [label = "aws_subnet.var_subnet_for_each_map", shape = "box"]
		"[root] aws_subnet.var_subnet_single (expand)" [label = "aws_subnet.var_subnet_single", shape = "box"]
		"[root] aws_vpc.res_vpc (expand)" [label = "aws_vpc.res_vpc", shape = "box"]
		"[root] data.aws_ami.ubuntu (expand)" [label = "data.aws_ami.ubuntu", shape = "box"]
		"[root] data.aws_availability_zones.available (expand)" [label = "data.aws_availability_zones.available", shape = "box"]
		"[root] data.aws_region.current (expand)" [label = "data.aws_region.current", shape = "box"]
		"[root] data.aws_s3_bucket.data_bucket (expand)" [label = "data.aws_s3_bucket.data_bucket", shape = "box"]
		"[root] local_file.private_key_pem (expand)" [label = "local_file.private_key_pem", shape = "box"]
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" [label = "module.autoscaling.aws_autoscaling_group.idc", shape = "box"]
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" [label = "module.autoscaling.aws_autoscaling_group.this", shape = "box"]
		"[root] module.autoscaling.aws_autoscaling_policy.this (expand)" [label = "module.autoscaling.aws_autoscaling_policy.this", shape = "box"]
		"[root] module.autoscaling.aws_autoscaling_schedule.this (expand)" [label = "module.autoscaling.aws_autoscaling_schedule.this", shape = "box"]
		"[root] module.autoscaling.aws_iam_instance_profile.this (expand)" [label = "module.autoscaling.aws_iam_instance_profile.this", shape = "box"]
		"[root] module.autoscaling.aws_iam_role.this (expand)" [label = "module.autoscaling.aws_iam_role.this", shape = "box"]
		"[root] module.autoscaling.aws_iam_role_policy_attachment.this (expand)" [label = "module.autoscaling.aws_iam_role_policy_attachment.this", shape = "box"]
		"[root] module.autoscaling.aws_launch_template.this (expand)" [label = "module.autoscaling.aws_launch_template.this", shape = "box"]
		"[root] module.autoscaling.data.aws_default_tags.current (expand)" [label = "module.autoscaling.data.aws_default_tags.current", shape = "box"]
		"[root] module.autoscaling.data.aws_iam_policy_document.assume_role_policy (expand)" [label = "module.autoscaling.data.aws_iam_policy_document.assume_role_policy", shape = "box"]
		"[root] module.autoscaling.data.aws_partition.current (expand)" [label = "module.autoscaling.data.aws_partition.current", shape = "box"]
		"[root] module.s3-bucket.aws_s3_bucket.this (expand)" [label = "module.s3-bucket.aws_s3_bucket.this", shape = "box"]
		"[root] module.s3-bucket.aws_s3_bucket_accelerate_configuration.this (expand)" [label = "module.s3-bucket.aws_s3_bucket_accelerate_configuration.this", shape = "box"]
		"[root] module.s3-bucket.aws_s3_bucket_acl.this (expand)" [label = "module.s3-bucket.aws_s3_bucket_acl.this", shape = "box"]
		"[root] module.s3-bucket.aws_s3_bucket_analytics_configuration.this (expand)" [label = "module.s3-bucket.aws_s3_bucket_analytics_configuration.this", shape = "box"]
		"[root] module.s3-bucket.aws_s3_bucket_cors_configuration.this (expand)" [label = "module.s3-bucket.aws_s3_bucket_cors_configuration.this", shape = "box"]
		"[root] module.s3-bucket.aws_s3_bucket_intelligent_tiering_configuration.this (expand)" [label = "module.s3-bucket.aws_s3_bucket_intelligent_tiering_configuration.this", shape = "box"]
		"[root] module.s3-bucket.aws_s3_bucket_inventory.this (expand)" [label = "module.s3-bucket.aws_s3_bucket_inventory.this", shape = "box"]
		"[root] module.s3-bucket.aws_s3_bucket_lifecycle_configuration.this (expand)" [label = "module.s3-bucket.aws_s3_bucket_lifecycle_configuration.this", shape = "box"]
		"[root] module.s3-bucket.aws_s3_bucket_logging.this (expand)" [label = "module.s3-bucket.aws_s3_bucket_logging.this", shape = "box"]
		"[root] module.s3-bucket.aws_s3_bucket_metric.this (expand)" [label = "module.s3-bucket.aws_s3_bucket_metric.this", shape = "box"]
		"[root] module.s3-bucket.aws_s3_bucket_object_lock_configuration.this (expand)" [label = "module.s3-bucket.aws_s3_bucket_object_lock_configuration.this", shape = "box"]
		"[root] module.s3-bucket.aws_s3_bucket_ownership_controls.this (expand)" [label = "module.s3-bucket.aws_s3_bucket_ownership_controls.this", shape = "box"]
		"[root] module.s3-bucket.aws_s3_bucket_policy.this (expand)" [label = "module.s3-bucket.aws_s3_bucket_policy.this", shape = "box"]
		"[root] module.s3-bucket.aws_s3_bucket_public_access_block.this (expand)" [label = "module.s3-bucket.aws_s3_bucket_public_access_block.this", shape = "box"]
		"[root] module.s3-bucket.aws_s3_bucket_replication_configuration.this (expand)" [label = "module.s3-bucket.aws_s3_bucket_replication_configuration.this", shape = "box"]
		"[root] module.s3-bucket.aws_s3_bucket_request_payment_configuration.this (expand)" [label = "module.s3-bucket.aws_s3_bucket_request_payment_configuration.this", shape = "box"]
		"[root] module.s3-bucket.aws_s3_bucket_server_side_encryption_configuration.this (expand)" [label = "module.s3-bucket.aws_s3_bucket_server_side_encryption_configuration.this", shape = "box"]
		"[root] module.s3-bucket.aws_s3_bucket_versioning.this (expand)" [label = "module.s3-bucket.aws_s3_bucket_versioning.this", shape = "box"]
		"[root] module.s3-bucket.aws_s3_bucket_website_configuration.this (expand)" [label = "module.s3-bucket.aws_s3_bucket_website_configuration.this", shape = "box"]
		"[root] module.s3-bucket.data.aws_caller_identity.current (expand)" [label = "module.s3-bucket.data.aws_caller_identity.current", shape = "box"]
		"[root] module.s3-bucket.data.aws_canonical_user_id.this (expand)" [label = "module.s3-bucket.data.aws_canonical_user_id.this", shape = "box"]
		"[root] module.s3-bucket.data.aws_iam_policy_document.combined (expand)" [label = "module.s3-bucket.data.aws_iam_policy_document.combined", shape = "box"]
		"[root] module.s3-bucket.data.aws_iam_policy_document.deny_insecure_transport (expand)" [label = "module.s3-bucket.data.aws_iam_policy_document.deny_insecure_transport", shape = "box"]
		"[root] module.s3-bucket.data.aws_iam_policy_document.elb_log_delivery (expand)" [label = "module.s3-bucket.data.aws_iam_policy_document.elb_log_delivery", shape = "box"]
		"[root] module.s3-bucket.data.aws_iam_policy_document.inventory_and_analytics_destination_policy (expand)" [label = "module.s3-bucket.data.aws_iam_policy_document.inventory_and_analytics_destination_policy", shape = "box"]
		"[root] module.s3-bucket.data.aws_iam_policy_document.lb_log_delivery (expand)" [label = "module.s3-bucket.data.aws_iam_policy_document.lb_log_delivery", shape = "box"]
		"[root] module.s3-bucket.data.aws_iam_policy_document.require_latest_tls (expand)" [label = "module.s3-bucket.data.aws_iam_policy_document.require_latest_tls", shape = "box"]
		"[root] module.s3-bucket.data.aws_region.current (expand)" [label = "module.s3-bucket.data.aws_region.current", shape = "box"]
		"[root] module.server.aws_instance.web_server (expand)" [label = "module.server.aws_instance.web_server", shape = "box"]
		"[root] module.server_subnet_1.aws_instance.web (expand)" [label = "module.server_subnet_1.aws_instance.web", shape = "box"]
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" [label = "module.vpc.aws_cloudwatch_log_group.flow_log", shape = "box"]
		"[root] module.vpc.aws_customer_gateway.this (expand)" [label = "module.vpc.aws_customer_gateway.this", shape = "box"]
		"[root] module.vpc.aws_db_subnet_group.database (expand)" [label = "module.vpc.aws_db_subnet_group.database", shape = "box"]
		"[root] module.vpc.aws_default_network_acl.this (expand)" [label = "module.vpc.aws_default_network_acl.this", shape = "box"]
		"[root] module.vpc.aws_default_route_table.default (expand)" [label = "module.vpc.aws_default_route_table.default", shape = "box"]
		"[root] module.vpc.aws_default_security_group.this (expand)" [label = "module.vpc.aws_default_security_group.this", shape = "box"]
		"[root] module.vpc.aws_default_vpc.this (expand)" [label = "module.vpc.aws_default_vpc.this", shape = "box"]
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" [label = "module.vpc.aws_egress_only_internet_gateway.this", shape = "box"]
		"[root] module.vpc.aws_eip.nat (expand)" [label = "module.vpc.aws_eip.nat", shape = "box"]
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)" [label = "module.vpc.aws_elasticache_subnet_group.elasticache", shape = "box"]
		"[root] module.vpc.aws_flow_log.this (expand)" [label = "module.vpc.aws_flow_log.this", shape = "box"]
		"[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)" [label = "module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch", shape = "box"]
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" [label = "module.vpc.aws_iam_role.vpc_flow_log_cloudwatch", shape = "box"]
		"[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)" [label = "module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch", shape = "box"]
		"[root] module.vpc.aws_internet_gateway.this (expand)" [label = "module.vpc.aws_internet_gateway.this", shape = "box"]
		"[root] module.vpc.aws_nat_gateway.this (expand)" [label = "module.vpc.aws_nat_gateway.this", shape = "box"]
		"[root] module.vpc.aws_network_acl.database (expand)" [label = "module.vpc.aws_network_acl.database", shape = "box"]
		"[root] module.vpc.aws_network_acl.elasticache (expand)" [label = "module.vpc.aws_network_acl.elasticache", shape = "box"]
		"[root] module.vpc.aws_network_acl.intra (expand)" [label = "module.vpc.aws_network_acl.intra", shape = "box"]
		"[root] module.vpc.aws_network_acl.outpost (expand)" [label = "module.vpc.aws_network_acl.outpost", shape = "box"]
		"[root] module.vpc.aws_network_acl.private (expand)" [label = "module.vpc.aws_network_acl.private", shape = "box"]
		"[root] module.vpc.aws_network_acl.public (expand)" [label = "module.vpc.aws_network_acl.public", shape = "box"]
		"[root] module.vpc.aws_network_acl.redshift (expand)" [label = "module.vpc.aws_network_acl.redshift", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.database_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.database_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.database_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.database_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.elasticache_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.elasticache_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.intra_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.intra_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.outpost_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.outpost_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.private_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.private_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.private_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.private_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.public_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.public_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.public_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.public_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.redshift_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.redshift_outbound", shape = "box"]
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" [label = "module.vpc.aws_redshift_subnet_group.redshift", shape = "box"]
		"[root] module.vpc.aws_route.database_internet_gateway (expand)" [label = "module.vpc.aws_route.database_internet_gateway", shape = "box"]
		"[root] module.vpc.aws_route.database_ipv6_egress (expand)" [label = "module.vpc.aws_route.database_ipv6_egress", shape = "box"]
		"[root] module.vpc.aws_route.database_nat_gateway (expand)" [label = "module.vpc.aws_route.database_nat_gateway", shape = "box"]
		"[root] module.vpc.aws_route.private_ipv6_egress (expand)" [label = "module.vpc.aws_route.private_ipv6_egress", shape = "box"]
		"[root] module.vpc.aws_route.private_nat_gateway (expand)" [label = "module.vpc.aws_route.private_nat_gateway", shape = "box"]
		"[root] module.vpc.aws_route.public_internet_gateway (expand)" [label = "module.vpc.aws_route.public_internet_gateway", shape = "box"]
		"[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)" [label = "module.vpc.aws_route.public_internet_gateway_ipv6", shape = "box"]
		"[root] module.vpc.aws_route_table.database (expand)" [label = "module.vpc.aws_route_table.database", shape = "box"]
		"[root] module.vpc.aws_route_table.elasticache (expand)" [label = "module.vpc.aws_route_table.elasticache", shape = "box"]
		"[root] module.vpc.aws_route_table.intra (expand)" [label = "module.vpc.aws_route_table.intra", shape = "box"]
		"[root] module.vpc.aws_route_table.private (expand)" [label = "module.vpc.aws_route_table.private", shape = "box"]
		"[root] module.vpc.aws_route_table.public (expand)" [label = "module.vpc.aws_route_table.public", shape = "box"]
		"[root] module.vpc.aws_route_table.redshift (expand)" [label = "module.vpc.aws_route_table.redshift", shape = "box"]
		"[root] module.vpc.aws_route_table_association.database (expand)" [label = "module.vpc.aws_route_table_association.database", shape = "box"]
		"[root] module.vpc.aws_route_table_association.elasticache (expand)" [label = "module.vpc.aws_route_table_association.elasticache", shape = "box"]
		"[root] module.vpc.aws_route_table_association.intra (expand)" [label = "module.vpc.aws_route_table_association.intra", shape = "box"]
		"[root] module.vpc.aws_route_table_association.outpost (expand)" [label = "module.vpc.aws_route_table_association.outpost", shape = "box"]
		"[root] module.vpc.aws_route_table_association.private (expand)" [label = "module.vpc.aws_route_table_association.private", shape = "box"]
		"[root] module.vpc.aws_route_table_association.public (expand)" [label = "module.vpc.aws_route_table_association.public", shape = "box"]
		"[root] module.vpc.aws_route_table_association.redshift (expand)" [label = "module.vpc.aws_route_table_association.redshift", shape = "box"]
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" [label = "module.vpc.aws_route_table_association.redshift_public", shape = "box"]
		"[root] module.vpc.aws_subnet.database (expand)" [label = "module.vpc.aws_subnet.database", shape = "box"]
		"[root] module.vpc.aws_subnet.elasticache (expand)" [label = "module.vpc.aws_subnet.elasticache", shape = "box"]
		"[root] module.vpc.aws_subnet.intra (expand)" [label = "module.vpc.aws_subnet.intra", shape = "box"]
		"[root] module.vpc.aws_subnet.outpost (expand)" [label = "module.vpc.aws_subnet.outpost", shape = "box"]
		"[root] module.vpc.aws_subnet.private (expand)" [label = "module.vpc.aws_subnet.private", shape = "box"]
		"[root] module.vpc.aws_subnet.public (expand)" [label = "module.vpc.aws_subnet.public", shape = "box"]
		"[root] module.vpc.aws_subnet.redshift (expand)" [label = "module.vpc.aws_subnet.redshift", shape = "box"]
		"[root] module.vpc.aws_vpc.this (expand)" [label = "module.vpc.aws_vpc.this", shape = "box"]
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" [label = "module.vpc.aws_vpc_dhcp_options.this", shape = "box"]
		"[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)" [label = "module.vpc.aws_vpc_dhcp_options_association.this", shape = "box"]
		"[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)" [label = "module.vpc.aws_vpc_ipv4_cidr_block_association.this", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway.this (expand)" [label = "module.vpc.aws_vpn_gateway.this", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway_attachment.this (expand)" [label = "module.vpc.aws_vpn_gateway_attachment.this", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" [label = "module.vpc.aws_vpn_gateway_route_propagation.intra", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" [label = "module.vpc.aws_vpn_gateway_route_propagation.private", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" [label = "module.vpc.aws_vpn_gateway_route_propagation.public", shape = "box"]
		"[root] module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role (expand)" [label = "module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role", shape = "box"]
		"[root] module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch (expand)" [label = "module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch", shape = "box"]
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" [label = "provider[\"registry.terraform.io/hashicorp/aws\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/local\"]" [label = "provider[\"registry.terraform.io/hashicorp/local\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/tls\"]" [label = "provider[\"registry.terraform.io/hashicorp/tls\"]", shape = "diamond"]
		"[root] tls_private_key.generated (expand)" [label = "tls_private_key.generated", shape = "box"]
		"[root] var.aws_region" [label = "var.aws_region", shape = "note"]
		"[root] var.character_limit" [label = "var.character_limit", shape = "note"]
		"[root] var.cloud" [label = "var.cloud", shape = "note"]
		"[root] var.env_map_any" [label = "var.env_map_any", shape = "note"]
		"[root] var.environment" [label = "var.environment", shape = "note"]
		"[root] var.first_name" [label = "var.first_name", shape = "note"]
		"[root] var.ip_address" [label = "var.ip_address", shape = "note"]
		"[root] var.ip_map_str" [label = "var.ip_map_str", shape = "note"]
		"[root] var.last_name" [label = "var.last_name", shape = "note"]
		"[root] var.no_caps" [label = "var.no_caps", shape = "note"]
		"[root] var.num_1" [label = "var.num_1", shape = "note"]
		"[root] var.num_2" [label = "var.num_2", shape = "note"]
		"[root] var.num_3" [label = "var.num_3", shape = "note"]
		"[root] var.phone_number" [label = "var.phone_number", shape = "note"]
		"[root] var.private_subnets" [label = "var.private_subnets", shape = "note"]
		"[root] var.public_subnets" [label = "var.public_subnets", shape = "note"]
		"[root] var.subnet_auto_ip" [label = "var.subnet_auto_ip", shape = "note"]
		"[root] var.subnet_az" [label = "var.subnet_az", shape = "note"]
		"[root] var.subnet_cidr" [label = "var.subnet_cidr", shape = "note"]
		"[root] var.us-east-1-azs_list_str" [label = "var.us-east-1-azs_list_str", shape = "note"]
		"[root] var.vpc_cidr" [label = "var.vpc_cidr", shape = "note"]
		"[root] var.vpc_name" [label = "var.vpc_name", shape = "note"]
		"[root] var.web_ingress" [label = "var.web_ingress", shape = "note"]
		"[root] aws_eip.res_eip (expand)" -> "[root] aws_internet_gateway.res_igw (expand)"
		"[root] aws_iam_policy.policy (expand)" -> "[root] data.aws_s3_bucket.data_bucket (expand)"
		"[root] aws_instance.aws_linux (expand)" -> "[root] local.common_tags (expand)"
		"[root] aws_instance.aws_linux (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_instance.ubuntu_server (expand)" -> "[root] aws_key_pair.generated (expand)"
		"[root] aws_instance.ubuntu_server (expand)" -> "[root] aws_security_group.ingress-ssh (expand)"
		"[root] aws_instance.ubuntu_server (expand)" -> "[root] aws_security_group.vpc-ping (expand)"
		"[root] aws_instance.ubuntu_server (expand)" -> "[root] aws_security_group.vpc-web (expand)"
		"[root] aws_instance.ubuntu_server (expand)" -> "[root] aws_subnet.res_publics (expand)"
		"[root] aws_instance.ubuntu_server (expand)" -> "[root] data.aws_ami.ubuntu (expand)"
		"[root] aws_instance.ubuntu_server (expand)" -> "[root] local.server_name (expand)"
		"[root] aws_instance.ubuntu_server (expand)" -> "[root] local.team (expand)"
		"[root] aws_instance.ubuntu_server (expand)" -> "[root] local_file.private_key_pem (expand)"
		"[root] aws_instance.web_server (expand)" -> "[root] aws_key_pair.generated (expand)"
		"[root] aws_instance.web_server (expand)" -> "[root] aws_security_group.ingress-ssh (expand)"
		"[root] aws_instance.web_server (expand)" -> "[root] aws_security_group.vpc-ping (expand)"
		"[root] aws_instance.web_server (expand)" -> "[root] aws_security_group.vpc-web (expand)"
		"[root] aws_instance.web_server (expand)" -> "[root] aws_subnet.res_publics (expand)"
		"[root] aws_instance.web_server (expand)" -> "[root] data.aws_ami.ubuntu (expand)"
		"[root] aws_instance.web_server (expand)" -> "[root] local.server_name (expand)"
		"[root] aws_instance.web_server (expand)" -> "[root] local.team (expand)"
		"[root] aws_instance.web_server (expand)" -> "[root] local_file.private_key_pem (expand)"
		"[root] aws_internet_gateway.res_igw (expand)" -> "[root] aws_vpc.res_vpc (expand)"
		"[root] aws_key_pair.generated (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_key_pair.generated (expand)" -> "[root] tls_private_key.generated (expand)"
		"[root] aws_nat_gateway.res_natgw (expand)" -> "[root] aws_eip.res_eip (expand)"
		"[root] aws_nat_gateway.res_natgw (expand)" -> "[root] aws_subnet.res_publics (expand)"
		"[root] aws_route_table.res_private_rtb (expand)" -> "[root] aws_nat_gateway.res_natgw (expand)"
		"[root] aws_route_table.res_public_rtb (expand)" -> "[root] aws_internet_gateway.res_igw (expand)"
		"[root] aws_route_table_association.private (expand)" -> "[root] aws_route_table.res_private_rtb (expand)"
		"[root] aws_route_table_association.private (expand)" -> "[root] aws_subnet.res_privates (expand)"
		"[root] aws_route_table_association.public (expand)" -> "[root] aws_route_table.res_public_rtb (expand)"
		"[root] aws_route_table_association.public (expand)" -> "[root] aws_subnet.res_publics (expand)"
		"[root] aws_security_group.ingress-ssh (expand)" -> "[root] aws_vpc.res_vpc (expand)"
		"[root] aws_security_group.sg-dynamic-web-traffic-local (expand)" -> "[root] aws_vpc.res_vpc (expand)"
		"[root] aws_security_group.sg-dynamic-web-traffic-local (expand)" -> "[root] local.ingress_rules (expand)"
		"[root] aws_security_group.sg-dynamic-web-traffic-var (expand)" -> "[root] aws_vpc.res_vpc (expand)"
		"[root] aws_security_group.sg-dynamic-web-traffic-var (expand)" -> "[root] var.web_ingress"
		"[root] aws_security_group.vpc-ping (expand)" -> "[root] aws_vpc.res_vpc (expand)"
		"[root] aws_security_group.vpc-web (expand)" -> "[root] aws_vpc.res_vpc (expand)"
		"[root] aws_subnet.res_privates (expand)" -> "[root] aws_vpc.res_vpc (expand)"
		"[root] aws_subnet.res_privates (expand)" -> "[root] data.aws_availability_zones.available (expand)"
		"[root] aws_subnet.res_privates (expand)" -> "[root] var.private_subnets"
		"[root] aws_subnet.res_publics (expand)" -> "[root] aws_vpc.res_vpc (expand)"
		"[root] aws_subnet.res_publics (expand)" -> "[root] data.aws_availability_zones.available (expand)"
		"[root] aws_subnet.res_publics (expand)" -> "[root] var.public_subnets"
		"[root] aws_subnet.res_var_subnet (expand)" -> "[root] aws_vpc.res_vpc (expand)"
		"[root] aws_subnet.res_var_subnet (expand)" -> "[root] var.subnet_auto_ip"
		"[root] aws_subnet.res_var_subnet (expand)" -> "[root] var.subnet_az"
		"[root] aws_subnet.res_var_subnet (expand)" -> "[root] var.subnet_cidr"
		"[root] aws_subnet.var_subnet_for_each (expand)" -> "[root] aws_vpc.res_vpc (expand)"
		"[root] aws_subnet.var_subnet_for_each (expand)" -> "[root] var.ip_map_str"
		"[root] aws_subnet.var_subnet_for_each (expand)" -> "[root] var.us-east-1-azs_list_str"
		"[root] aws_subnet.var_subnet_for_each_map (expand)" -> "[root] aws_vpc.res_vpc (expand)"
		"[root] aws_subnet.var_subnet_for_each_map (expand)" -> "[root] var.env_map_any"
		"[root] aws_subnet.var_subnet_single (expand)" -> "[root] aws_vpc.res_vpc (expand)"
		"[root] aws_subnet.var_subnet_single (expand)" -> "[root] var.ip_map_str"
		"[root] aws_subnet.var_subnet_single (expand)" -> "[root] var.us-east-1-azs_list_str"
		"[root] aws_vpc.res_vpc (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_vpc.res_vpc (expand)" -> "[root] var.environment"
		"[root] aws_vpc.res_vpc (expand)" -> "[root] var.vpc_cidr"
		"[root] aws_vpc.res_vpc (expand)" -> "[root] var.vpc_name"
		"[root] data.aws_ami.ubuntu (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] data.aws_availability_zones.available (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] data.aws_region.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] data.aws_s3_bucket.data_bucket (expand)" -> "[root] module.s3-bucket.output.s3_bucket_id (expand)"
		"[root] local.common_tags (expand)" -> "[root] local.server_name (expand)"
		"[root] local.common_tags (expand)" -> "[root] local.team (expand)"
		"[root] local.contact_info_sensitive (expand)" -> "[root] var.first_name"
		"[root] local.contact_info_sensitive (expand)" -> "[root] var.last_name"
		"[root] local.contact_info_sensitive (expand)" -> "[root] var.phone_number"
		"[root] local.contact_info_valid (expand)" -> "[root] var.character_limit"
		"[root] local.contact_info_valid (expand)" -> "[root] var.cloud"
		"[root] local.contact_info_valid (expand)" -> "[root] var.ip_address"
		"[root] local.contact_info_valid (expand)" -> "[root] var.no_caps"
		"[root] local.maximum (expand)" -> "[root] var.num_1"
		"[root] local.maximum (expand)" -> "[root] var.num_2"
		"[root] local.maximum (expand)" -> "[root] var.num_3"
		"[root] local.minimum (expand)" -> "[root] var.num_1"
		"[root] local.minimum (expand)" -> "[root] var.num_2"
		"[root] local.minimum (expand)" -> "[root] var.num_3"
		"[root] local.my_number (expand)" -> "[root] var.phone_number"
		"[root] local.server_name (expand)" -> "[root] local.application (expand)"
		"[root] local.server_name (expand)" -> "[root] var.environment"
		"[root] local_file.private_key_pem (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/local\"]"
		"[root] local_file.private_key_pem (expand)" -> "[root] tls_private_key.generated (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.aws_iam_role_policy_attachment.this (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.output.autoscaling_group_arn (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.output.autoscaling_group_availability_zones (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.output.autoscaling_group_default_cooldown (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.output.autoscaling_group_desired_capacity (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.output.autoscaling_group_enabled_metrics (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.output.autoscaling_group_health_check_grace_period (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.output.autoscaling_group_health_check_type (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.output.autoscaling_group_id (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.output.autoscaling_group_load_balancers (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.output.autoscaling_group_max_size (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.output.autoscaling_group_min_size (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.output.autoscaling_group_name (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.output.autoscaling_group_target_group_arns (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.output.autoscaling_group_vpc_zone_identifier (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.output.autoscaling_policy_arns (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.output.autoscaling_schedule_arns (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.output.iam_instance_profile_arn (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.output.iam_instance_profile_id (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.output.iam_instance_profile_unique (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.output.iam_role_arn (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.output.iam_role_name (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.output.iam_role_unique_id (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.output.launch_template_arn (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.output.launch_template_default_version (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.output.launch_template_id (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.output.launch_template_latest_version (expand)"
		"[root] module.autoscaling (close)" -> "[root] module.autoscaling.output.launch_template_name (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.local.asg_tags (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.local.launch_template (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.local.launch_template_version (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.availability_zones (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.capacity_rebalance (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.default_cooldown (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.default_instance_warmup (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.delete_timeout (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.desired_capacity (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.desired_capacity_type (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.enabled_metrics (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.force_delete (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.health_check_grace_period (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.health_check_type (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.ignore_desired_capacity_changes (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.initial_lifecycle_hooks (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.instance_refresh (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.load_balancers (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.max_instance_lifetime (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.max_size (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.metrics_granularity (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.min_elb_capacity (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.min_size (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.mixed_instances_policy (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.placement_group (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.protect_from_scale_in (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.service_linked_role_arn (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.suspended_processes (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.target_group_arns (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.termination_policies (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.use_mixed_instances_policy (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.use_name_prefix (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.vpc_zone_identifier (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.wait_for_capacity_timeout (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.wait_for_elb_capacity (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.idc (expand)" -> "[root] module.autoscaling.var.warm_pool (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.local.asg_tags (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.local.launch_template (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.local.launch_template_version (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.availability_zones (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.capacity_rebalance (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.default_cooldown (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.default_instance_warmup (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.delete_timeout (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.desired_capacity (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.desired_capacity_type (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.enabled_metrics (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.force_delete (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.health_check_grace_period (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.health_check_type (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.ignore_desired_capacity_changes (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.initial_lifecycle_hooks (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.instance_refresh (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.load_balancers (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.max_instance_lifetime (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.max_size (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.metrics_granularity (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.min_elb_capacity (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.min_size (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.mixed_instances_policy (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.placement_group (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.protect_from_scale_in (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.service_linked_role_arn (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.suspended_processes (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.target_group_arns (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.termination_policies (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.use_mixed_instances_policy (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.use_name_prefix (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.vpc_zone_identifier (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.wait_for_capacity_timeout (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.wait_for_elb_capacity (expand)"
		"[root] module.autoscaling.aws_autoscaling_group.this (expand)" -> "[root] module.autoscaling.var.warm_pool (expand)"
		"[root] module.autoscaling.aws_autoscaling_policy.this (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.idc (expand)"
		"[root] module.autoscaling.aws_autoscaling_policy.this (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.this (expand)"
		"[root] module.autoscaling.aws_autoscaling_policy.this (expand)" -> "[root] module.autoscaling.var.create_scaling_policy (expand)"
		"[root] module.autoscaling.aws_autoscaling_policy.this (expand)" -> "[root] module.autoscaling.var.scaling_policies (expand)"
		"[root] module.autoscaling.aws_autoscaling_schedule.this (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.idc (expand)"
		"[root] module.autoscaling.aws_autoscaling_schedule.this (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.this (expand)"
		"[root] module.autoscaling.aws_autoscaling_schedule.this (expand)" -> "[root] module.autoscaling.var.create_schedule (expand)"
		"[root] module.autoscaling.aws_autoscaling_schedule.this (expand)" -> "[root] module.autoscaling.var.schedules (expand)"
		"[root] module.autoscaling.aws_iam_instance_profile.this (expand)" -> "[root] module.autoscaling.aws_iam_role.this (expand)"
		"[root] module.autoscaling.aws_iam_role.this (expand)" -> "[root] module.autoscaling.data.aws_iam_policy_document.assume_role_policy (expand)"
		"[root] module.autoscaling.aws_iam_role.this (expand)" -> "[root] module.autoscaling.local.internal_iam_instance_profile_name (expand)"
		"[root] module.autoscaling.aws_iam_role.this (expand)" -> "[root] module.autoscaling.var.iam_role_description (expand)"
		"[root] module.autoscaling.aws_iam_role.this (expand)" -> "[root] module.autoscaling.var.iam_role_path (expand)"
		"[root] module.autoscaling.aws_iam_role.this (expand)" -> "[root] module.autoscaling.var.iam_role_permissions_boundary (expand)"
		"[root] module.autoscaling.aws_iam_role.this (expand)" -> "[root] module.autoscaling.var.iam_role_tags (expand)"
		"[root] module.autoscaling.aws_iam_role.this (expand)" -> "[root] module.autoscaling.var.iam_role_use_name_prefix (expand)"
		"[root] module.autoscaling.aws_iam_role.this (expand)" -> "[root] module.autoscaling.var.tags (expand)"
		"[root] module.autoscaling.aws_iam_role_policy_attachment.this (expand)" -> "[root] module.autoscaling.aws_iam_role.this (expand)"
		"[root] module.autoscaling.aws_iam_role_policy_attachment.this (expand)" -> "[root] module.autoscaling.var.iam_role_policies (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.local.iam_instance_profile_arn (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.local.iam_instance_profile_name (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.local.launch_template_name (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.block_device_mappings (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.capacity_reservation_specification (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.cpu_options (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.create_launch_template (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.credit_specification (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.default_version (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.disable_api_stop (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.disable_api_termination (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.ebs_optimized (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.elastic_gpu_specifications (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.elastic_inference_accelerator (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.enable_monitoring (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.enclave_options (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.hibernation_options (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.image_id (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.instance_initiated_shutdown_behavior (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.instance_market_options (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.instance_requirements (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.instance_type (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.kernel_id (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.key_name (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.launch_template_description (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.launch_template_use_name_prefix (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.license_specifications (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.maintenance_options (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.metadata_options (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.network_interfaces (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.placement (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.private_dns_name_options (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.ram_disk_id (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.security_groups (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.tag_specifications (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.update_default_version (expand)"
		"[root] module.autoscaling.aws_launch_template.this (expand)" -> "[root] module.autoscaling.var.user_data (expand)"
		"[root] module.autoscaling.data.aws_default_tags.current (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.data.aws_default_tags.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.autoscaling.data.aws_iam_policy_document.assume_role_policy (expand)" -> "[root] module.autoscaling.data.aws_partition.current (expand)"
		"[root] module.autoscaling.data.aws_iam_policy_document.assume_role_policy (expand)" -> "[root] module.autoscaling.local.create (expand)"
		"[root] module.autoscaling.data.aws_iam_policy_document.assume_role_policy (expand)" -> "[root] module.autoscaling.var.create_iam_instance_profile (expand)"
		"[root] module.autoscaling.data.aws_partition.current (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.data.aws_partition.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.autoscaling.local.asg_tags (expand)" -> "[root] module.autoscaling.data.aws_default_tags.current (expand)"
		"[root] module.autoscaling.local.asg_tags (expand)" -> "[root] module.autoscaling.var.autoscaling_group_tags (expand)"
		"[root] module.autoscaling.local.asg_tags (expand)" -> "[root] module.autoscaling.var.instance_name (expand)"
		"[root] module.autoscaling.local.asg_tags (expand)" -> "[root] module.autoscaling.var.name (expand)"
		"[root] module.autoscaling.local.asg_tags (expand)" -> "[root] module.autoscaling.var.tags (expand)"
		"[root] module.autoscaling.local.create (expand)" -> "[root] module.autoscaling.var.create (expand)"
		"[root] module.autoscaling.local.create (expand)" -> "[root] module.autoscaling.var.putin_khuylo (expand)"
		"[root] module.autoscaling.local.iam_instance_profile_arn (expand)" -> "[root] module.autoscaling.aws_iam_instance_profile.this (expand)"
		"[root] module.autoscaling.local.iam_instance_profile_arn (expand)" -> "[root] module.autoscaling.var.iam_instance_profile_arn (expand)"
		"[root] module.autoscaling.local.iam_instance_profile_name (expand)" -> "[root] module.autoscaling.var.create_iam_instance_profile (expand)"
		"[root] module.autoscaling.local.iam_instance_profile_name (expand)" -> "[root] module.autoscaling.var.iam_instance_profile_arn (expand)"
		"[root] module.autoscaling.local.iam_instance_profile_name (expand)" -> "[root] module.autoscaling.var.iam_instance_profile_name (expand)"
		"[root] module.autoscaling.local.internal_iam_instance_profile_name (expand)" -> "[root] module.autoscaling.var.iam_instance_profile_name (expand)"
		"[root] module.autoscaling.local.internal_iam_instance_profile_name (expand)" -> "[root] module.autoscaling.var.iam_role_name (expand)"
		"[root] module.autoscaling.local.launch_template (expand)" -> "[root] module.autoscaling.aws_launch_template.this (expand)"
		"[root] module.autoscaling.local.launch_template (expand)" -> "[root] module.autoscaling.var.launch_template (expand)"
		"[root] module.autoscaling.local.launch_template_name (expand)" -> "[root] module.autoscaling.var.launch_template_name (expand)"
		"[root] module.autoscaling.local.launch_template_name (expand)" -> "[root] module.autoscaling.var.name (expand)"
		"[root] module.autoscaling.local.launch_template_version (expand)" -> "[root] module.autoscaling.aws_launch_template.this (expand)"
		"[root] module.autoscaling.local.launch_template_version (expand)" -> "[root] module.autoscaling.var.launch_template_version (expand)"
		"[root] module.autoscaling.output.autoscaling_group_arn (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.idc (expand)"
		"[root] module.autoscaling.output.autoscaling_group_arn (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.this (expand)"
		"[root] module.autoscaling.output.autoscaling_group_availability_zones (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.idc (expand)"
		"[root] module.autoscaling.output.autoscaling_group_availability_zones (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.this (expand)"
		"[root] module.autoscaling.output.autoscaling_group_default_cooldown (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.idc (expand)"
		"[root] module.autoscaling.output.autoscaling_group_default_cooldown (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.this (expand)"
		"[root] module.autoscaling.output.autoscaling_group_desired_capacity (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.idc (expand)"
		"[root] module.autoscaling.output.autoscaling_group_desired_capacity (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.this (expand)"
		"[root] module.autoscaling.output.autoscaling_group_enabled_metrics (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.idc (expand)"
		"[root] module.autoscaling.output.autoscaling_group_enabled_metrics (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.this (expand)"
		"[root] module.autoscaling.output.autoscaling_group_health_check_grace_period (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.idc (expand)"
		"[root] module.autoscaling.output.autoscaling_group_health_check_grace_period (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.this (expand)"
		"[root] module.autoscaling.output.autoscaling_group_health_check_type (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.idc (expand)"
		"[root] module.autoscaling.output.autoscaling_group_health_check_type (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.this (expand)"
		"[root] module.autoscaling.output.autoscaling_group_id (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.idc (expand)"
		"[root] module.autoscaling.output.autoscaling_group_id (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.this (expand)"
		"[root] module.autoscaling.output.autoscaling_group_load_balancers (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.idc (expand)"
		"[root] module.autoscaling.output.autoscaling_group_load_balancers (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.this (expand)"
		"[root] module.autoscaling.output.autoscaling_group_max_size (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.idc (expand)"
		"[root] module.autoscaling.output.autoscaling_group_max_size (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.this (expand)"
		"[root] module.autoscaling.output.autoscaling_group_min_size (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.idc (expand)"
		"[root] module.autoscaling.output.autoscaling_group_min_size (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.this (expand)"
		"[root] module.autoscaling.output.autoscaling_group_name (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.idc (expand)"
		"[root] module.autoscaling.output.autoscaling_group_name (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.this (expand)"
		"[root] module.autoscaling.output.autoscaling_group_target_group_arns (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.idc (expand)"
		"[root] module.autoscaling.output.autoscaling_group_target_group_arns (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.this (expand)"
		"[root] module.autoscaling.output.autoscaling_group_vpc_zone_identifier (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.idc (expand)"
		"[root] module.autoscaling.output.autoscaling_group_vpc_zone_identifier (expand)" -> "[root] module.autoscaling.aws_autoscaling_group.this (expand)"
		"[root] module.autoscaling.output.autoscaling_policy_arns (expand)" -> "[root] module.autoscaling.aws_autoscaling_policy.this (expand)"
		"[root] module.autoscaling.output.autoscaling_schedule_arns (expand)" -> "[root] module.autoscaling.aws_autoscaling_schedule.this (expand)"
		"[root] module.autoscaling.output.iam_instance_profile_arn (expand)" -> "[root] module.autoscaling.aws_iam_instance_profile.this (expand)"
		"[root] module.autoscaling.output.iam_instance_profile_arn (expand)" -> "[root] module.autoscaling.var.iam_instance_profile_arn (expand)"
		"[root] module.autoscaling.output.iam_instance_profile_id (expand)" -> "[root] module.autoscaling.aws_iam_instance_profile.this (expand)"
		"[root] module.autoscaling.output.iam_instance_profile_unique (expand)" -> "[root] module.autoscaling.aws_iam_instance_profile.this (expand)"
		"[root] module.autoscaling.output.iam_role_arn (expand)" -> "[root] module.autoscaling.aws_iam_role.this (expand)"
		"[root] module.autoscaling.output.iam_role_name (expand)" -> "[root] module.autoscaling.aws_iam_role.this (expand)"
		"[root] module.autoscaling.output.iam_role_unique_id (expand)" -> "[root] module.autoscaling.aws_iam_role.this (expand)"
		"[root] module.autoscaling.output.launch_template_arn (expand)" -> "[root] module.autoscaling.aws_launch_template.this (expand)"
		"[root] module.autoscaling.output.launch_template_default_version (expand)" -> "[root] module.autoscaling.aws_launch_template.this (expand)"
		"[root] module.autoscaling.output.launch_template_id (expand)" -> "[root] module.autoscaling.aws_launch_template.this (expand)"
		"[root] module.autoscaling.output.launch_template_latest_version (expand)" -> "[root] module.autoscaling.aws_launch_template.this (expand)"
		"[root] module.autoscaling.output.launch_template_name (expand)" -> "[root] module.autoscaling.aws_launch_template.this (expand)"
		"[root] module.autoscaling.var.autoscaling_group_tags (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.availability_zones (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.block_device_mappings (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.capacity_rebalance (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.capacity_reservation_specification (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.cpu_options (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.create (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.create_iam_instance_profile (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.create_launch_template (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.create_scaling_policy (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.create_schedule (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.credit_specification (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.default_cooldown (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.default_instance_warmup (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.default_version (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.delete_timeout (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.desired_capacity (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.desired_capacity_type (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.disable_api_stop (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.disable_api_termination (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.ebs_optimized (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.elastic_gpu_specifications (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.elastic_inference_accelerator (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.enable_monitoring (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.enabled_metrics (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.enclave_options (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.force_delete (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.health_check_grace_period (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.health_check_type (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.hibernation_options (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.iam_instance_profile_arn (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.iam_instance_profile_name (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.iam_role_description (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.iam_role_name (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.iam_role_path (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.iam_role_permissions_boundary (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.iam_role_policies (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.iam_role_tags (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.iam_role_use_name_prefix (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.ignore_desired_capacity_changes (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.image_id (expand)" -> "[root] data.aws_ami.ubuntu (expand)"
		"[root] module.autoscaling.var.image_id (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.initial_lifecycle_hooks (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.instance_initiated_shutdown_behavior (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.instance_market_options (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.instance_name (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.instance_refresh (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.instance_requirements (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.instance_type (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.kernel_id (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.key_name (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.launch_template (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.launch_template_description (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.launch_template_name (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.launch_template_use_name_prefix (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.launch_template_version (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.license_specifications (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.load_balancers (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.maintenance_options (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.max_instance_lifetime (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.max_size (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.metadata_options (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.metrics_granularity (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.min_elb_capacity (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.min_size (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.mixed_instances_policy (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.name (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.network_interfaces (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.placement (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.placement_group (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.private_dns_name_options (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.protect_from_scale_in (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.putin_khuylo (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.ram_disk_id (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.scaling_policies (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.schedules (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.security_groups (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.service_linked_role_arn (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.suspended_processes (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.tag_specifications (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.tags (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.target_group_arns (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.termination_policies (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.update_default_version (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.use_mixed_instances_policy (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.use_name_prefix (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.user_data (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.vpc_zone_identifier (expand)" -> "[root] aws_subnet.res_privates (expand)"
		"[root] module.autoscaling.var.vpc_zone_identifier (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.wait_for_capacity_timeout (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.wait_for_elb_capacity (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.autoscaling.var.warm_pool (expand)" -> "[root] module.autoscaling (expand)"
		"[root] module.s3-bucket (close)" -> "[root] module.s3-bucket.aws_s3_bucket_accelerate_configuration.this (expand)"
		"[root] module.s3-bucket (close)" -> "[root] module.s3-bucket.aws_s3_bucket_acl.this (expand)"
		"[root] module.s3-bucket (close)" -> "[root] module.s3-bucket.aws_s3_bucket_analytics_configuration.this (expand)"
		"[root] module.s3-bucket (close)" -> "[root] module.s3-bucket.aws_s3_bucket_cors_configuration.this (expand)"
		"[root] module.s3-bucket (close)" -> "[root] module.s3-bucket.aws_s3_bucket_intelligent_tiering_configuration.this (expand)"
		"[root] module.s3-bucket (close)" -> "[root] module.s3-bucket.aws_s3_bucket_inventory.this (expand)"
		"[root] module.s3-bucket (close)" -> "[root] module.s3-bucket.aws_s3_bucket_lifecycle_configuration.this (expand)"
		"[root] module.s3-bucket (close)" -> "[root] module.s3-bucket.aws_s3_bucket_logging.this (expand)"
		"[root] module.s3-bucket (close)" -> "[root] module.s3-bucket.aws_s3_bucket_metric.this (expand)"
		"[root] module.s3-bucket (close)" -> "[root] module.s3-bucket.aws_s3_bucket_object_lock_configuration.this (expand)"
		"[root] module.s3-bucket (close)" -> "[root] module.s3-bucket.aws_s3_bucket_replication_configuration.this (expand)"
		"[root] module.s3-bucket (close)" -> "[root] module.s3-bucket.aws_s3_bucket_request_payment_configuration.this (expand)"
		"[root] module.s3-bucket (close)" -> "[root] module.s3-bucket.aws_s3_bucket_server_side_encryption_configuration.this (expand)"
		"[root] module.s3-bucket (close)" -> "[root] module.s3-bucket.output.s3_bucket_arn (expand)"
		"[root] module.s3-bucket (close)" -> "[root] module.s3-bucket.output.s3_bucket_bucket_domain_name (expand)"
		"[root] module.s3-bucket (close)" -> "[root] module.s3-bucket.output.s3_bucket_bucket_regional_domain_name (expand)"
		"[root] module.s3-bucket (close)" -> "[root] module.s3-bucket.output.s3_bucket_hosted_zone_id (expand)"
		"[root] module.s3-bucket (close)" -> "[root] module.s3-bucket.output.s3_bucket_id (expand)"
		"[root] module.s3-bucket (close)" -> "[root] module.s3-bucket.output.s3_bucket_region (expand)"
		"[root] module.s3-bucket (close)" -> "[root] module.s3-bucket.output.s3_bucket_website_domain (expand)"
		"[root] module.s3-bucket (close)" -> "[root] module.s3-bucket.output.s3_bucket_website_endpoint (expand)"
		"[root] module.s3-bucket.aws_s3_bucket.this (expand)" -> "[root] module.s3-bucket.local.create_bucket (expand)"
		"[root] module.s3-bucket.aws_s3_bucket.this (expand)" -> "[root] module.s3-bucket.var.bucket (expand)"
		"[root] module.s3-bucket.aws_s3_bucket.this (expand)" -> "[root] module.s3-bucket.var.bucket_prefix (expand)"
		"[root] module.s3-bucket.aws_s3_bucket.this (expand)" -> "[root] module.s3-bucket.var.force_destroy (expand)"
		"[root] module.s3-bucket.aws_s3_bucket.this (expand)" -> "[root] module.s3-bucket.var.object_lock_enabled (expand)"
		"[root] module.s3-bucket.aws_s3_bucket.this (expand)" -> "[root] module.s3-bucket.var.tags (expand)"
		"[root] module.s3-bucket.aws_s3_bucket.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.s3-bucket.aws_s3_bucket_accelerate_configuration.this (expand)" -> "[root] module.s3-bucket.aws_s3_bucket.this (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_accelerate_configuration.this (expand)" -> "[root] module.s3-bucket.var.acceleration_status (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_accelerate_configuration.this (expand)" -> "[root] module.s3-bucket.var.expected_bucket_owner (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_acl.this (expand)" -> "[root] module.s3-bucket.aws_s3_bucket_ownership_controls.this (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_acl.this (expand)" -> "[root] module.s3-bucket.data.aws_canonical_user_id.this (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_acl.this (expand)" -> "[root] module.s3-bucket.local.grants (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_acl.this (expand)" -> "[root] module.s3-bucket.var.acl (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_acl.this (expand)" -> "[root] module.s3-bucket.var.expected_bucket_owner (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_acl.this (expand)" -> "[root] module.s3-bucket.var.owner (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_analytics_configuration.this (expand)" -> "[root] module.s3-bucket.aws_s3_bucket.this (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_analytics_configuration.this (expand)" -> "[root] module.s3-bucket.data.aws_caller_identity.current (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_analytics_configuration.this (expand)" -> "[root] module.s3-bucket.var.analytics_configuration (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_cors_configuration.this (expand)" -> "[root] module.s3-bucket.aws_s3_bucket.this (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_cors_configuration.this (expand)" -> "[root] module.s3-bucket.local.cors_rules (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_cors_configuration.this (expand)" -> "[root] module.s3-bucket.var.expected_bucket_owner (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_intelligent_tiering_configuration.this (expand)" -> "[root] module.s3-bucket.aws_s3_bucket.this (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_intelligent_tiering_configuration.this (expand)" -> "[root] module.s3-bucket.local.intelligent_tiering (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_inventory.this (expand)" -> "[root] module.s3-bucket.aws_s3_bucket.this (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_inventory.this (expand)" -> "[root] module.s3-bucket.var.inventory_configuration (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_lifecycle_configuration.this (expand)" -> "[root] module.s3-bucket.aws_s3_bucket_versioning.this (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_lifecycle_configuration.this (expand)" -> "[root] module.s3-bucket.local.lifecycle_rules (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_logging.this (expand)" -> "[root] module.s3-bucket.aws_s3_bucket.this (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_logging.this (expand)" -> "[root] module.s3-bucket.var.logging (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_metric.this (expand)" -> "[root] module.s3-bucket.aws_s3_bucket.this (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_metric.this (expand)" -> "[root] module.s3-bucket.local.metric_configuration (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_object_lock_configuration.this (expand)" -> "[root] module.s3-bucket.aws_s3_bucket.this (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_object_lock_configuration.this (expand)" -> "[root] module.s3-bucket.var.expected_bucket_owner (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_object_lock_configuration.this (expand)" -> "[root] module.s3-bucket.var.object_lock_configuration (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_ownership_controls.this (expand)" -> "[root] module.s3-bucket.aws_s3_bucket_public_access_block.this (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_ownership_controls.this (expand)" -> "[root] module.s3-bucket.var.control_object_ownership (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_ownership_controls.this (expand)" -> "[root] module.s3-bucket.var.object_ownership (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_policy.this (expand)" -> "[root] module.s3-bucket.data.aws_iam_policy_document.combined (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_public_access_block.this (expand)" -> "[root] module.s3-bucket.aws_s3_bucket_policy.this (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_public_access_block.this (expand)" -> "[root] module.s3-bucket.var.attach_public_policy (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_public_access_block.this (expand)" -> "[root] module.s3-bucket.var.block_public_acls (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_public_access_block.this (expand)" -> "[root] module.s3-bucket.var.block_public_policy (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_public_access_block.this (expand)" -> "[root] module.s3-bucket.var.ignore_public_acls (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_public_access_block.this (expand)" -> "[root] module.s3-bucket.var.restrict_public_buckets (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_replication_configuration.this (expand)" -> "[root] module.s3-bucket.aws_s3_bucket_versioning.this (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_replication_configuration.this (expand)" -> "[root] module.s3-bucket.var.replication_configuration (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_request_payment_configuration.this (expand)" -> "[root] module.s3-bucket.aws_s3_bucket.this (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_request_payment_configuration.this (expand)" -> "[root] module.s3-bucket.var.expected_bucket_owner (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_request_payment_configuration.this (expand)" -> "[root] module.s3-bucket.var.request_payer (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_server_side_encryption_configuration.this (expand)" -> "[root] module.s3-bucket.aws_s3_bucket.this (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_server_side_encryption_configuration.this (expand)" -> "[root] module.s3-bucket.var.expected_bucket_owner (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_server_side_encryption_configuration.this (expand)" -> "[root] module.s3-bucket.var.server_side_encryption_configuration (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_versioning.this (expand)" -> "[root] module.s3-bucket.aws_s3_bucket.this (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_versioning.this (expand)" -> "[root] module.s3-bucket.var.expected_bucket_owner (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_versioning.this (expand)" -> "[root] module.s3-bucket.var.versioning (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_website_configuration.this (expand)" -> "[root] module.s3-bucket.aws_s3_bucket.this (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_website_configuration.this (expand)" -> "[root] module.s3-bucket.var.expected_bucket_owner (expand)"
		"[root] module.s3-bucket.aws_s3_bucket_website_configuration.this (expand)" -> "[root] module.s3-bucket.var.website (expand)"
		"[root] module.s3-bucket.data.aws_caller_identity.current (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.data.aws_caller_identity.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.s3-bucket.data.aws_canonical_user_id.this (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.data.aws_canonical_user_id.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.s3-bucket.data.aws_iam_policy_document.combined (expand)" -> "[root] module.s3-bucket.data.aws_iam_policy_document.deny_insecure_transport (expand)"
		"[root] module.s3-bucket.data.aws_iam_policy_document.combined (expand)" -> "[root] module.s3-bucket.data.aws_iam_policy_document.elb_log_delivery (expand)"
		"[root] module.s3-bucket.data.aws_iam_policy_document.combined (expand)" -> "[root] module.s3-bucket.data.aws_iam_policy_document.inventory_and_analytics_destination_policy (expand)"
		"[root] module.s3-bucket.data.aws_iam_policy_document.combined (expand)" -> "[root] module.s3-bucket.data.aws_iam_policy_document.lb_log_delivery (expand)"
		"[root] module.s3-bucket.data.aws_iam_policy_document.combined (expand)" -> "[root] module.s3-bucket.data.aws_iam_policy_document.require_latest_tls (expand)"
		"[root] module.s3-bucket.data.aws_iam_policy_document.combined (expand)" -> "[root] module.s3-bucket.local.attach_policy (expand)"
		"[root] module.s3-bucket.data.aws_iam_policy_document.combined (expand)" -> "[root] module.s3-bucket.var.policy (expand)"
		"[root] module.s3-bucket.data.aws_iam_policy_document.deny_insecure_transport (expand)" -> "[root] module.s3-bucket.aws_s3_bucket.this (expand)"
		"[root] module.s3-bucket.data.aws_iam_policy_document.deny_insecure_transport (expand)" -> "[root] module.s3-bucket.var.attach_deny_insecure_transport_policy (expand)"
		"[root] module.s3-bucket.data.aws_iam_policy_document.elb_log_delivery (expand)" -> "[root] module.s3-bucket.aws_s3_bucket.this (expand)"
		"[root] module.s3-bucket.data.aws_iam_policy_document.elb_log_delivery (expand)" -> "[root] module.s3-bucket.data.aws_region.current (expand)"
		"[root] module.s3-bucket.data.aws_iam_policy_document.elb_log_delivery (expand)" -> "[root] module.s3-bucket.local.elb_service_accounts (expand)"
		"[root] module.s3-bucket.data.aws_iam_policy_document.elb_log_delivery (expand)" -> "[root] module.s3-bucket.var.attach_elb_log_delivery_policy (expand)"
		"[root] module.s3-bucket.data.aws_iam_policy_document.inventory_and_analytics_destination_policy (expand)" -> "[root] module.s3-bucket.aws_s3_bucket.this (expand)"
		"[root] module.s3-bucket.data.aws_iam_policy_document.inventory_and_analytics_destination_policy (expand)" -> "[root] module.s3-bucket.data.aws_caller_identity.current (expand)"
		"[root] module.s3-bucket.data.aws_iam_policy_document.inventory_and_analytics_destination_policy (expand)" -> "[root] module.s3-bucket.var.analytics_self_source_destination (expand)"
		"[root] module.s3-bucket.data.aws_iam_policy_document.inventory_and_analytics_destination_policy (expand)" -> "[root] module.s3-bucket.var.analytics_source_account_id (expand)"
		"[root] module.s3-bucket.data.aws_iam_policy_document.inventory_and_analytics_destination_policy (expand)" -> "[root] module.s3-bucket.var.analytics_source_bucket_arn (expand)"
		"[root] module.s3-bucket.data.aws_iam_policy_document.inventory_and_analytics_destination_policy (expand)" -> "[root] module.s3-bucket.var.attach_analytics_destination_policy (expand)"
		"[root] module.s3-bucket.data.aws_iam_policy_document.inventory_and_analytics_destination_policy (expand)" -> "[root] module.s3-bucket.var.attach_inventory_destination_policy (expand)"
		"[root] module.s3-bucket.data.aws_iam_policy_document.inventory_and_analytics_destination_policy (expand)" -> "[root] module.s3-bucket.var.inventory_self_source_destination (expand)"
		"[root] module.s3-bucket.data.aws_iam_policy_document.inventory_and_analytics_destination_policy (expand)" -> "[root] module.s3-bucket.var.inventory_source_account_id (expand)"
		"[root] module.s3-bucket.data.aws_iam_policy_document.inventory_and_analytics_destination_policy (expand)" -> "[root] module.s3-bucket.var.inventory_source_bucket_arn (expand)"
		"[root] module.s3-bucket.data.aws_iam_policy_document.lb_log_delivery (expand)" -> "[root] module.s3-bucket.aws_s3_bucket.this (expand)"
		"[root] module.s3-bucket.data.aws_iam_policy_document.lb_log_delivery (expand)" -> "[root] module.s3-bucket.var.attach_lb_log_delivery_policy (expand)"
		"[root] module.s3-bucket.data.aws_iam_policy_document.require_latest_tls (expand)" -> "[root] module.s3-bucket.aws_s3_bucket.this (expand)"
		"[root] module.s3-bucket.data.aws_iam_policy_document.require_latest_tls (expand)" -> "[root] module.s3-bucket.var.attach_require_latest_tls_policy (expand)"
		"[root] module.s3-bucket.data.aws_region.current (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.data.aws_region.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.s3-bucket.local.attach_policy (expand)" -> "[root] module.s3-bucket.var.attach_deny_insecure_transport_policy (expand)"
		"[root] module.s3-bucket.local.attach_policy (expand)" -> "[root] module.s3-bucket.var.attach_elb_log_delivery_policy (expand)"
		"[root] module.s3-bucket.local.attach_policy (expand)" -> "[root] module.s3-bucket.var.attach_inventory_destination_policy (expand)"
		"[root] module.s3-bucket.local.attach_policy (expand)" -> "[root] module.s3-bucket.var.attach_lb_log_delivery_policy (expand)"
		"[root] module.s3-bucket.local.attach_policy (expand)" -> "[root] module.s3-bucket.var.attach_policy (expand)"
		"[root] module.s3-bucket.local.attach_policy (expand)" -> "[root] module.s3-bucket.var.attach_require_latest_tls_policy (expand)"
		"[root] module.s3-bucket.local.cors_rules (expand)" -> "[root] module.s3-bucket.var.cors_rule (expand)"
		"[root] module.s3-bucket.local.create_bucket (expand)" -> "[root] module.s3-bucket.var.create_bucket (expand)"
		"[root] module.s3-bucket.local.create_bucket (expand)" -> "[root] module.s3-bucket.var.putin_khuylo (expand)"
		"[root] module.s3-bucket.local.elb_service_accounts (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.local.grants (expand)" -> "[root] module.s3-bucket.var.grant (expand)"
		"[root] module.s3-bucket.local.intelligent_tiering (expand)" -> "[root] module.s3-bucket.var.intelligent_tiering (expand)"
		"[root] module.s3-bucket.local.lifecycle_rules (expand)" -> "[root] module.s3-bucket.var.lifecycle_rule (expand)"
		"[root] module.s3-bucket.local.metric_configuration (expand)" -> "[root] module.s3-bucket.var.metric_configuration (expand)"
		"[root] module.s3-bucket.output.s3_bucket_arn (expand)" -> "[root] module.s3-bucket.aws_s3_bucket.this (expand)"
		"[root] module.s3-bucket.output.s3_bucket_bucket_domain_name (expand)" -> "[root] module.s3-bucket.aws_s3_bucket.this (expand)"
		"[root] module.s3-bucket.output.s3_bucket_bucket_regional_domain_name (expand)" -> "[root] module.s3-bucket.aws_s3_bucket.this (expand)"
		"[root] module.s3-bucket.output.s3_bucket_hosted_zone_id (expand)" -> "[root] module.s3-bucket.aws_s3_bucket.this (expand)"
		"[root] module.s3-bucket.output.s3_bucket_id (expand)" -> "[root] module.s3-bucket.aws_s3_bucket_policy.this (expand)"
		"[root] module.s3-bucket.output.s3_bucket_region (expand)" -> "[root] module.s3-bucket.aws_s3_bucket.this (expand)"
		"[root] module.s3-bucket.output.s3_bucket_website_domain (expand)" -> "[root] module.s3-bucket.aws_s3_bucket_website_configuration.this (expand)"
		"[root] module.s3-bucket.output.s3_bucket_website_endpoint (expand)" -> "[root] module.s3-bucket.aws_s3_bucket_website_configuration.this (expand)"
		"[root] module.s3-bucket.var.acceleration_status (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.acl (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.analytics_configuration (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.analytics_self_source_destination (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.analytics_source_account_id (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.analytics_source_bucket_arn (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.attach_analytics_destination_policy (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.attach_deny_insecure_transport_policy (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.attach_elb_log_delivery_policy (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.attach_inventory_destination_policy (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.attach_lb_log_delivery_policy (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.attach_policy (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.attach_public_policy (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.attach_require_latest_tls_policy (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.block_public_acls (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.block_public_policy (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.bucket (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.bucket_prefix (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.control_object_ownership (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.cors_rule (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.create_bucket (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.expected_bucket_owner (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.force_destroy (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.grant (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.ignore_public_acls (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.intelligent_tiering (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.inventory_configuration (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.inventory_self_source_destination (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.inventory_source_account_id (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.inventory_source_bucket_arn (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.lifecycle_rule (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.logging (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.metric_configuration (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.object_lock_configuration (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.object_lock_enabled (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.object_ownership (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.owner (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.policy (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.putin_khuylo (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.replication_configuration (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.request_payer (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.restrict_public_buckets (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.server_side_encryption_configuration (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.tags (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.versioning (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.s3-bucket.var.website (expand)" -> "[root] module.s3-bucket (expand)"
		"[root] module.server (close)" -> "[root] module.server.output.instance_type (expand)"
		"[root] module.server (close)" -> "[root] module.server.output.public_dns (expand)"
		"[root] module.server (close)" -> "[root] module.server.output.public_ip (expand)"
		"[root] module.server.aws_instance.web_server (expand)" -> "[root] module.server.var.ami (expand)"
		"[root] module.server.aws_instance.web_server (expand)" -> "[root] module.server.var.security_groups (expand)"
		"[root] module.server.aws_instance.web_server (expand)" -> "[root] module.server.var.size (expand)"
		"[root] module.server.aws_instance.web_server (expand)" -> "[root] module.server.var.subnet_id (expand)"
		"[root] module.server.output.instance_type (expand)" -> "[root] module.server.aws_instance.web_server (expand)"
		"[root] module.server.output.public_dns (expand)" -> "[root] module.server.aws_instance.web_server (expand)"
		"[root] module.server.output.public_ip (expand)" -> "[root] module.server.aws_instance.web_server (expand)"
		"[root] module.server.var.ami (expand)" -> "[root] data.aws_ami.ubuntu (expand)"
		"[root] module.server.var.ami (expand)" -> "[root] module.server (expand)"
		"[root] module.server.var.security_groups (expand)" -> "[root] aws_security_group.ingress-ssh (expand)"
		"[root] module.server.var.security_groups (expand)" -> "[root] aws_security_group.vpc-ping (expand)"
		"[root] module.server.var.security_groups (expand)" -> "[root] aws_security_group.vpc-web (expand)"
		"[root] module.server.var.security_groups (expand)" -> "[root] module.server (expand)"
		"[root] module.server.var.size (expand)" -> "[root] module.server (expand)"
		"[root] module.server.var.subnet_id (expand)" -> "[root] aws_subnet.res_publics (expand)"
		"[root] module.server.var.subnet_id (expand)" -> "[root] module.server (expand)"
		"[root] module.server_subnet_1 (close)" -> "[root] module.server_subnet_1.output.public_dns (expand)"
		"[root] module.server_subnet_1 (close)" -> "[root] module.server_subnet_1.output.public_ip (expand)"
		"[root] module.server_subnet_1.aws_instance.web (expand)" -> "[root] module.server_subnet_1.var.ami (expand)"
		"[root] module.server_subnet_1.aws_instance.web (expand)" -> "[root] module.server_subnet_1.var.key_name (expand)"
		"[root] module.server_subnet_1.aws_instance.web (expand)" -> "[root] module.server_subnet_1.var.private_key (expand)"
		"[root] module.server_subnet_1.aws_instance.web (expand)" -> "[root] module.server_subnet_1.var.security_groups (expand)"
		"[root] module.server_subnet_1.aws_instance.web (expand)" -> "[root] module.server_subnet_1.var.size (expand)"
		"[root] module.server_subnet_1.aws_instance.web (expand)" -> "[root] module.server_subnet_1.var.subnet_id (expand)"
		"[root] module.server_subnet_1.aws_instance.web (expand)" -> "[root] module.server_subnet_1.var.user (expand)"
		"[root] module.server_subnet_1.output.public_dns (expand)" -> "[root] module.server_subnet_1.aws_instance.web (expand)"
		"[root] module.server_subnet_1.output.public_ip (expand)" -> "[root] module.server_subnet_1.aws_instance.web (expand)"
		"[root] module.server_subnet_1.var.ami (expand)" -> "[root] data.aws_ami.ubuntu (expand)"
		"[root] module.server_subnet_1.var.ami (expand)" -> "[root] module.server_subnet_1 (expand)"
		"[root] module.server_subnet_1.var.key_name (expand)" -> "[root] aws_key_pair.generated (expand)"
		"[root] module.server_subnet_1.var.key_name (expand)" -> "[root] module.server_subnet_1 (expand)"
		"[root] module.server_subnet_1.var.private_key (expand)" -> "[root] module.server_subnet_1 (expand)"
		"[root] module.server_subnet_1.var.private_key (expand)" -> "[root] tls_private_key.generated (expand)"
		"[root] module.server_subnet_1.var.security_groups (expand)" -> "[root] aws_security_group.ingress-ssh (expand)"
		"[root] module.server_subnet_1.var.security_groups (expand)" -> "[root] aws_security_group.vpc-ping (expand)"
		"[root] module.server_subnet_1.var.security_groups (expand)" -> "[root] aws_security_group.vpc-web (expand)"
		"[root] module.server_subnet_1.var.security_groups (expand)" -> "[root] module.server_subnet_1 (expand)"
		"[root] module.server_subnet_1.var.size (expand)" -> "[root] module.server_subnet_1 (expand)"
		"[root] module.server_subnet_1.var.subnet_id (expand)" -> "[root] aws_subnet.res_publics (expand)"
		"[root] module.server_subnet_1.var.subnet_id (expand)" -> "[root] module.server_subnet_1 (expand)"
		"[root] module.server_subnet_1.var.user (expand)" -> "[root] module.server_subnet_1 (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_default_network_acl.this (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_default_route_table.default (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_default_security_group.this (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.database_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.database_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.private_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.private_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.public_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.public_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_route_table_association.outpost (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.azs (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.cgw_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.cgw_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_internet_gateway_route_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_ipv6_egress_route_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_nat_gateway_route_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnet_group (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnet_group_name (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_route_table_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_security_group_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_cidr_block (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_default_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_default_route_table_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_default_security_group_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_enable_dns_hostnames (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_enable_dns_support (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_instance_tenancy (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_main_route_table_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.dhcp_options_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.egress_only_internet_gateway_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnet_group (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnet_group_name (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.igw_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.igw_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.name (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.nat_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.nat_public_ips (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.natgw_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_ipv6_egress_route_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_nat_gateway_route_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_internet_gateway_ipv6_route_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_internet_gateway_route_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_public_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnet_group (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.this_customer_gateway (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vgw_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vgw_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_cidr_block (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_enable_dns_hostnames (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_enable_dns_support (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_flow_log_cloudwatch_iam_role_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_flow_log_destination_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_flow_log_destination_type (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_flow_log_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_instance_tenancy (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_ipv6_association_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_ipv6_cidr_block (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_main_route_table_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_owner_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_secondary_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.var.default_vpc_enable_classiclink (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.var.enable_classiclink (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.var.enable_classiclink_dns_support (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.local.create_flow_log_cloudwatch_log_group (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.local.flow_log_cloudwatch_log_group_name_suffix (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.var.flow_log_cloudwatch_log_group_kms_key_id (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.var.flow_log_cloudwatch_log_group_name_prefix (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.var.flow_log_cloudwatch_log_group_retention_in_days (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.var.vpc_flow_log_tags (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] module.vpc.var.customer_gateway_tags (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] module.vpc.var.customer_gateways (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] module.vpc.var.name (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.aws_db_subnet_group.database (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.aws_db_subnet_group.database (expand)" -> "[root] module.vpc.var.create_database_subnet_group (expand)"
		"[root] module.vpc.aws_db_subnet_group.database (expand)" -> "[root] module.vpc.var.database_subnet_group_name (expand)"
		"[root] module.vpc.aws_db_subnet_group.database (expand)" -> "[root] module.vpc.var.database_subnet_group_tags (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.default_network_acl_egress (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.default_network_acl_ingress (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.default_network_acl_name (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.default_network_acl_tags (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.manage_default_network_acl (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.var.default_route_table_name (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.var.default_route_table_propagating_vgws (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.var.default_route_table_routes (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.var.default_route_table_tags (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.var.manage_default_route_table (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.default_security_group_egress (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.default_security_group_ingress (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.default_security_group_name (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.default_security_group_tags (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.manage_default_security_group (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.default_vpc_enable_dns_hostnames (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.default_vpc_enable_dns_support (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.default_vpc_name (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.default_vpc_tags (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.manage_default_vpc (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" -> "[root] module.vpc.local.max_subnet_length (expand)"
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" -> "[root] module.vpc.var.create_egress_only_igw (expand)"
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" -> "[root] module.vpc.var.igw_tags (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.local.create_vpc (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.local.nat_gateway_count (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.enable_nat_gateway (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.name (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.nat_eip_tags (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.reuse_nat_ips (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)" -> "[root] module.vpc.var.create_elasticache_subnet_group (expand)"
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_group_name (expand)"
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_group_tags (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.local.flow_log_destination_arn (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.local.flow_log_iam_role_arn (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_file_format (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_hive_compatible_partitions (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_log_format (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_max_aggregation_interval (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_per_hour_partition (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_traffic_type (expand)"
		"[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.var.vpc_flow_log_tags (expand)"
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role (expand)"
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.var.vpc_flow_log_permissions_boundary (expand)"
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.var.vpc_flow_log_tags (expand)"
		"[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc.aws_internet_gateway.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_internet_gateway.this (expand)" -> "[root] module.vpc.var.create_igw (expand)"
		"[root] module.vpc.aws_internet_gateway.this (expand)" -> "[root] module.vpc.var.igw_tags (expand)"
		"[root] module.vpc.aws_internet_gateway.this (expand)" -> "[root] module.vpc.var.public_subnets (expand)"
		"[root] module.vpc.aws_nat_gateway.this (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.aws_nat_gateway.this (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.aws_nat_gateway.this (expand)" -> "[root] module.vpc.local.nat_gateway_ips (expand)"
		"[root] module.vpc.aws_nat_gateway.this (expand)" -> "[root] module.vpc.var.nat_gateway_tags (expand)"
		"[root] module.vpc.aws_network_acl.database (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.aws_network_acl.database (expand)" -> "[root] module.vpc.var.database_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.database (expand)" -> "[root] module.vpc.var.database_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.elasticache (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.aws_network_acl.elasticache (expand)" -> "[root] module.vpc.var.elasticache_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.elasticache (expand)" -> "[root] module.vpc.var.elasticache_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.intra (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.aws_network_acl.intra (expand)" -> "[root] module.vpc.var.intra_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.intra (expand)" -> "[root] module.vpc.var.intra_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.outpost (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.aws_network_acl.outpost (expand)" -> "[root] module.vpc.var.outpost_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.outpost (expand)" -> "[root] module.vpc.var.outpost_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.private (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.aws_network_acl.private (expand)" -> "[root] module.vpc.var.private_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.private (expand)" -> "[root] module.vpc.var.private_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.public (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.aws_network_acl.public (expand)" -> "[root] module.vpc.var.public_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.public (expand)" -> "[root] module.vpc.var.public_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.redshift (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.aws_network_acl.redshift (expand)" -> "[root] module.vpc.var.redshift_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.redshift (expand)" -> "[root] module.vpc.var.redshift_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl_rule.database_inbound (expand)" -> "[root] module.vpc.aws_network_acl.database (expand)"
		"[root] module.vpc.aws_network_acl_rule.database_inbound (expand)" -> "[root] module.vpc.var.database_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.database_outbound (expand)" -> "[root] module.vpc.aws_network_acl.database (expand)"
		"[root] module.vpc.aws_network_acl_rule.database_outbound (expand)" -> "[root] module.vpc.var.database_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)" -> "[root] module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)" -> "[root] module.vpc.var.elasticache_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)" -> "[root] module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)" -> "[root] module.vpc.var.elasticache_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)" -> "[root] module.vpc.aws_network_acl.intra (expand)"
		"[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)" -> "[root] module.vpc.var.intra_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)" -> "[root] module.vpc.aws_network_acl.intra (expand)"
		"[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)" -> "[root] module.vpc.var.intra_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)" -> "[root] module.vpc.aws_network_acl.outpost (expand)"
		"[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)" -> "[root] module.vpc.var.outpost_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)" -> "[root] module.vpc.aws_network_acl.outpost (expand)"
		"[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)" -> "[root] module.vpc.var.outpost_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.private_inbound (expand)" -> "[root] module.vpc.aws_network_acl.private (expand)"
		"[root] module.vpc.aws_network_acl_rule.private_inbound (expand)" -> "[root] module.vpc.var.private_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.private_outbound (expand)" -> "[root] module.vpc.aws_network_acl.private (expand)"
		"[root] module.vpc.aws_network_acl_rule.private_outbound (expand)" -> "[root] module.vpc.var.private_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.public_inbound (expand)" -> "[root] module.vpc.aws_network_acl.public (expand)"
		"[root] module.vpc.aws_network_acl_rule.public_inbound (expand)" -> "[root] module.vpc.var.public_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.public_outbound (expand)" -> "[root] module.vpc.aws_network_acl.public (expand)"
		"[root] module.vpc.aws_network_acl_rule.public_outbound (expand)" -> "[root] module.vpc.var.public_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)" -> "[root] module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)" -> "[root] module.vpc.var.redshift_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)" -> "[root] module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)" -> "[root] module.vpc.var.redshift_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" -> "[root] module.vpc.var.create_redshift_subnet_group (expand)"
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_group_name (expand)"
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_group_tags (expand)"
		"[root] module.vpc.aws_route.database_internet_gateway (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.database_internet_gateway (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.aws_route.database_internet_gateway (expand)" -> "[root] module.vpc.var.create_database_nat_gateway_route (expand)"
		"[root] module.vpc.aws_route.database_ipv6_egress (expand)" -> "[root] module.vpc.aws_egress_only_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.database_ipv6_egress (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.aws_route.database_nat_gateway (expand)" -> "[root] module.vpc.aws_nat_gateway.this (expand)"
		"[root] module.vpc.aws_route.database_nat_gateway (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.aws_route.database_nat_gateway (expand)" -> "[root] module.vpc.var.create_database_nat_gateway_route (expand)"
		"[root] module.vpc.aws_route.private_ipv6_egress (expand)" -> "[root] module.vpc.aws_egress_only_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.private_ipv6_egress (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route.private_nat_gateway (expand)" -> "[root] module.vpc.aws_nat_gateway.this (expand)"
		"[root] module.vpc.aws_route.private_nat_gateway (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route.private_nat_gateway (expand)" -> "[root] module.vpc.var.nat_gateway_destination_cidr_block (expand)"
		"[root] module.vpc.aws_route.public_internet_gateway (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.public_internet_gateway (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.create_database_internet_gateway_route (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.create_database_subnet_route_table (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.database_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.database_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.database_subnets (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.single_nat_gateway (expand)"
		"[root] module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.vpc.var.create_elasticache_subnet_route_table (expand)"
		"[root] module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.vpc.var.elasticache_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnets (expand)"
		"[root] module.vpc.aws_route_table.intra (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.intra (expand)" -> "[root] module.vpc.var.intra_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.intra (expand)" -> "[root] module.vpc.var.intra_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.intra (expand)" -> "[root] module.vpc.var.intra_subnets (expand)"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.local.nat_gateway_count (expand)"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.var.private_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.var.private_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.public (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.public (expand)" -> "[root] module.vpc.var.public_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.public (expand)" -> "[root] module.vpc.var.public_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.public (expand)" -> "[root] module.vpc.var.public_subnets (expand)"
		"[root] module.vpc.aws_route_table.redshift (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.redshift (expand)" -> "[root] module.vpc.var.create_redshift_subnet_route_table (expand)"
		"[root] module.vpc.aws_route_table.redshift (expand)" -> "[root] module.vpc.var.redshift_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.redshift (expand)" -> "[root] module.vpc.var.redshift_subnets (expand)"
		"[root] module.vpc.aws_route_table_association.database (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.aws_route_table_association.database (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.database (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.aws_route_table_association.elasticache (expand)" -> "[root] module.vpc.aws_route_table.elasticache (expand)"
		"[root] module.vpc.aws_route_table_association.elasticache (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.elasticache (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.aws_route_table_association.intra (expand)" -> "[root] module.vpc.aws_route_table.intra (expand)"
		"[root] module.vpc.aws_route_table_association.intra (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.aws_route_table_association.outpost (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.outpost (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.aws_route_table_association.private (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.private (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.aws_route_table_association.public (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_route_table_association.public (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.aws_route_table_association.redshift (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.redshift (expand)" -> "[root] module.vpc.aws_route_table.redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift (expand)" -> "[root] module.vpc.var.enable_public_redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.aws_route_table.redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.var.enable_public_redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.var.single_nat_gateway (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_names (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnets (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_names (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnets (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_names (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnets (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_arn (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_az (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_names (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnets (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_names (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_tags_per_az (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnets (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.map_public_ip_on_launch (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.one_nat_gateway_per_az (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_names (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_tags_per_az (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnets (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_names (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnets (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.local.create_vpc (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.cidr (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.enable_dns_hostnames (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.enable_dns_support (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.enable_ipv6 (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.instance_tenancy (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.ipv4_ipam_pool_id (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.ipv4_netmask_length (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.ipv6_cidr (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.ipv6_ipam_pool_id (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.ipv6_netmask_length (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.name (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.use_ipam_pool (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.vpc_tags (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.local.create_vpc (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_domain_name (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_domain_name_servers (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_netbios_name_servers (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_netbios_node_type (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_ntp_servers (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_tags (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.enable_dhcp_options (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.name (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)" -> "[root] module.vpc.aws_vpc_dhcp_options.this (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)" -> "[root] module.vpc.var.secondary_cidr_blocks (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.var.amazon_side_asn (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.var.enable_vpn_gateway (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.var.vpn_gateway_az (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.var.vpn_gateway_tags (expand)"
		"[root] module.vpc.aws_vpn_gateway_attachment.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_vpn_gateway_attachment.this (expand)" -> "[root] module.vpc.var.vpn_gateway_id (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" -> "[root] module.vpc.aws_route_table.intra (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" -> "[root] module.vpc.aws_vpn_gateway_attachment.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" -> "[root] module.vpc.var.propagate_intra_route_tables_vgw (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" -> "[root] module.vpc.aws_vpn_gateway_attachment.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" -> "[root] module.vpc.var.propagate_private_route_tables_vgw (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" -> "[root] module.vpc.aws_vpn_gateway_attachment.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" -> "[root] module.vpc.var.propagate_public_route_tables_vgw (expand)"
		"[root] module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role (expand)" -> "[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)"
		"[root] module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)"
		"[root] module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)" -> "[root] module.vpc.local.enable_flow_log (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)" -> "[root] module.vpc.var.create_flow_log_cloudwatch_iam_role (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)" -> "[root] module.vpc.var.flow_log_destination_type (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_log_group (expand)" -> "[root] module.vpc.local.enable_flow_log (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_log_group (expand)" -> "[root] module.vpc.var.create_flow_log_cloudwatch_log_group (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_log_group (expand)" -> "[root] module.vpc.var.flow_log_destination_type (expand)"
		"[root] module.vpc.local.create_vpc (expand)" -> "[root] module.vpc.var.create_vpc (expand)"
		"[root] module.vpc.local.create_vpc (expand)" -> "[root] module.vpc.var.putin_khuylo (expand)"
		"[root] module.vpc.local.enable_flow_log (expand)" -> "[root] module.vpc.var.create_vpc (expand)"
		"[root] module.vpc.local.enable_flow_log (expand)" -> "[root] module.vpc.var.enable_flow_log (expand)"
		"[root] module.vpc.local.flow_log_cloudwatch_log_group_name_suffix (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.local.flow_log_cloudwatch_log_group_name_suffix (expand)" -> "[root] module.vpc.var.flow_log_cloudwatch_log_group_name_suffix (expand)"
		"[root] module.vpc.local.flow_log_destination_arn (expand)" -> "[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)"
		"[root] module.vpc.local.flow_log_destination_arn (expand)" -> "[root] module.vpc.var.flow_log_destination_arn (expand)"
		"[root] module.vpc.local.flow_log_iam_role_arn (expand)" -> "[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc.local.flow_log_iam_role_arn (expand)" -> "[root] module.vpc.var.flow_log_cloudwatch_iam_role_arn (expand)"
		"[root] module.vpc.local.max_subnet_length (expand)" -> "[root] module.vpc.var.database_subnets (expand)"
		"[root] module.vpc.local.max_subnet_length (expand)" -> "[root] module.vpc.var.elasticache_subnets (expand)"
		"[root] module.vpc.local.max_subnet_length (expand)" -> "[root] module.vpc.var.private_subnets (expand)"
		"[root] module.vpc.local.max_subnet_length (expand)" -> "[root] module.vpc.var.redshift_subnets (expand)"
		"[root] module.vpc.local.nat_gateway_count (expand)" -> "[root] module.vpc.local.max_subnet_length (expand)"
		"[root] module.vpc.local.nat_gateway_count (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.local.nat_gateway_count (expand)" -> "[root] module.vpc.var.one_nat_gateway_per_az (expand)"
		"[root] module.vpc.local.nat_gateway_count (expand)" -> "[root] module.vpc.var.single_nat_gateway (expand)"
		"[root] module.vpc.local.nat_gateway_ips (expand)" -> "[root] module.vpc.aws_eip.nat (expand)"
		"[root] module.vpc.local.nat_gateway_ips (expand)" -> "[root] module.vpc.var.external_nat_ip_ids (expand)"
		"[root] module.vpc.local.vpc_id (expand)" -> "[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)"
		"[root] module.vpc.output.azs (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.output.cgw_arns (expand)" -> "[root] module.vpc.aws_customer_gateway.this (expand)"
		"[root] module.vpc.output.cgw_ids (expand)" -> "[root] module.vpc.aws_customer_gateway.this (expand)"
		"[root] module.vpc.output.database_internet_gateway_route_id (expand)" -> "[root] module.vpc.aws_route.database_internet_gateway (expand)"
		"[root] module.vpc.output.database_ipv6_egress_route_id (expand)" -> "[root] module.vpc.aws_route.database_ipv6_egress (expand)"
		"[root] module.vpc.output.database_nat_gateway_route_ids (expand)" -> "[root] module.vpc.aws_route.database_nat_gateway (expand)"
		"[root] module.vpc.output.database_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.database (expand)"
		"[root] module.vpc.output.database_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.database (expand)"
		"[root] module.vpc.output.database_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.database (expand)"
		"[root] module.vpc.output.database_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.output.database_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.output.database_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.output.database_subnet_group (expand)" -> "[root] module.vpc.aws_db_subnet_group.database (expand)"
		"[root] module.vpc.output.database_subnet_group_name (expand)" -> "[root] module.vpc.aws_db_subnet_group.database (expand)"
		"[root] module.vpc.output.database_subnets (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.output.database_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.output.database_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.output.default_network_acl_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.default_route_table_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.default_security_group_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_arn (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_cidr_block (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_default_network_acl_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_default_route_table_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_default_security_group_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_enable_dns_hostnames (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_enable_dns_support (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_instance_tenancy (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_main_route_table_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.dhcp_options_id (expand)" -> "[root] module.vpc.aws_vpc_dhcp_options.this (expand)"
		"[root] module.vpc.output.egress_only_internet_gateway_id (expand)" -> "[root] module.vpc.aws_egress_only_internet_gateway.this (expand)"
		"[root] module.vpc.output.elasticache_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.vpc.output.elasticache_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.vpc.output.elasticache_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.elasticache (expand)"
		"[root] module.vpc.output.elasticache_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.elasticache (expand)"
		"[root] module.vpc.output.elasticache_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.output.elasticache_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnet_group (expand)" -> "[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnet_group_name (expand)" -> "[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnets (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.output.igw_arn (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.output.igw_id (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.output.intra_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.intra (expand)"
		"[root] module.vpc.output.intra_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.intra (expand)"
		"[root] module.vpc.output.intra_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.intra (expand)"
		"[root] module.vpc.output.intra_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.intra (expand)"
		"[root] module.vpc.output.intra_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.output.intra_subnets (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.output.intra_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.output.intra_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.output.name (expand)" -> "[root] module.vpc.var.name (expand)"
		"[root] module.vpc.output.nat_ids (expand)" -> "[root] module.vpc.aws_eip.nat (expand)"
		"[root] module.vpc.output.nat_public_ips (expand)" -> "[root] module.vpc.aws_eip.nat (expand)"
		"[root] module.vpc.output.nat_public_ips (expand)" -> "[root] module.vpc.var.external_nat_ips (expand)"
		"[root] module.vpc.output.natgw_ids (expand)" -> "[root] module.vpc.aws_nat_gateway.this (expand)"
		"[root] module.vpc.output.outpost_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.outpost (expand)"
		"[root] module.vpc.output.outpost_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.outpost (expand)"
		"[root] module.vpc.output.outpost_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.output.outpost_subnets (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.output.outpost_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.output.outpost_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.output.private_ipv6_egress_route_ids (expand)" -> "[root] module.vpc.aws_route.private_ipv6_egress (expand)"
		"[root] module.vpc.output.private_nat_gateway_route_ids (expand)" -> "[root] module.vpc.aws_route.private_nat_gateway (expand)"
		"[root] module.vpc.output.private_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.private (expand)"
		"[root] module.vpc.output.private_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.private (expand)"
		"[root] module.vpc.output.private_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.private (expand)"
		"[root] module.vpc.output.private_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.output.private_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.output.private_subnets (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.output.private_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.output.private_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.output.public_internet_gateway_ipv6_route_id (expand)" -> "[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)"
		"[root] module.vpc.output.public_internet_gateway_route_id (expand)" -> "[root] module.vpc.aws_route.public_internet_gateway (expand)"
		"[root] module.vpc.output.public_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.public (expand)"
		"[root] module.vpc.output.public_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.public (expand)"
		"[root] module.vpc.output.public_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.public (expand)"
		"[root] module.vpc.output.public_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.output.public_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.output.public_subnets (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.output.public_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.output.public_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.output.redshift_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.vpc.output.redshift_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.vpc.output.redshift_public_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.redshift_public (expand)"
		"[root] module.vpc.output.redshift_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.redshift (expand)"
		"[root] module.vpc.output.redshift_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.output.redshift_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.output.redshift_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.redshift (expand)"
		"[root] module.vpc.output.redshift_route_table_ids (expand)" -> "[root] module.vpc.var.enable_public_redshift (expand)"
		"[root] module.vpc.output.redshift_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.output.redshift_subnet_group (expand)" -> "[root] module.vpc.aws_redshift_subnet_group.redshift (expand)"
		"[root] module.vpc.output.redshift_subnets (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.output.redshift_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.output.redshift_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.output.this_customer_gateway (expand)" -> "[root] module.vpc.aws_customer_gateway.this (expand)"
		"[root] module.vpc.output.vgw_arn (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.output.vgw_id (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.output.vgw_id (expand)" -> "[root] module.vpc.aws_vpn_gateway_attachment.this (expand)"
		"[root] module.vpc.output.vpc_arn (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_cidr_block (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_enable_dns_hostnames (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_enable_dns_support (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_flow_log_cloudwatch_iam_role_arn (expand)" -> "[root] module.vpc.local.flow_log_iam_role_arn (expand)"
		"[root] module.vpc.output.vpc_flow_log_destination_arn (expand)" -> "[root] module.vpc.local.flow_log_destination_arn (expand)"
		"[root] module.vpc.output.vpc_flow_log_destination_type (expand)" -> "[root] module.vpc.var.flow_log_destination_type (expand)"
		"[root] module.vpc.output.vpc_flow_log_id (expand)" -> "[root] module.vpc.aws_flow_log.this (expand)"
		"[root] module.vpc.output.vpc_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_instance_tenancy (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_ipv6_association_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_ipv6_cidr_block (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_main_route_table_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_owner_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_secondary_cidr_blocks (expand)" -> "[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)"
		"[root] module.vpc.var.amazon_side_asn (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.azs (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.cidr (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_database_internet_gateway_route (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_database_nat_gateway_route (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_database_subnet_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_database_subnet_route_table (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_egress_only_igw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_elasticache_subnet_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_elasticache_subnet_route_table (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_flow_log_cloudwatch_iam_role (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_flow_log_cloudwatch_log_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_igw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_redshift_subnet_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_redshift_subnet_route_table (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_vpc (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.customer_gateway_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.customer_gateways (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_group_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_group_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_names (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_network_acl_egress (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_network_acl_ingress (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_network_acl_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_network_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_route_table_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_route_table_propagating_vgws (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_route_table_routes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_security_group_egress (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_security_group_ingress (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_security_group_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_security_group_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_vpc_enable_classiclink (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_vpc_enable_dns_hostnames (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_vpc_enable_dns_support (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_vpc_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_vpc_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_domain_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_domain_name_servers (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_netbios_name_servers (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_netbios_node_type (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_ntp_servers (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_group_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_group_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_names (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_classiclink (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_classiclink_dns_support (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_dhcp_options (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_dns_hostnames (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_dns_support (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_flow_log (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_ipv6 (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_nat_gateway (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_public_redshift (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_vpn_gateway (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.external_nat_ip_ids (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.external_nat_ips (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_cloudwatch_iam_role_arn (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_cloudwatch_log_group_kms_key_id (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_cloudwatch_log_group_name_prefix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_cloudwatch_log_group_name_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_cloudwatch_log_group_retention_in_days (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_destination_arn (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_destination_type (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_file_format (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_hive_compatible_partitions (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_log_format (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_max_aggregation_interval (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_per_hour_partition (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_traffic_type (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.igw_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.instance_tenancy (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_names (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.ipv4_ipam_pool_id (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.ipv4_netmask_length (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.ipv6_cidr (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.ipv6_ipam_pool_id (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.ipv6_netmask_length (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.manage_default_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.manage_default_route_table (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.manage_default_security_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.manage_default_vpc (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.map_public_ip_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.nat_eip_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.nat_gateway_destination_cidr_block (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.nat_gateway_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.one_nat_gateway_per_az (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_arn (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_az (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_names (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_names (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_tags_per_az (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.propagate_intra_route_tables_vgw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.propagate_private_route_tables_vgw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.propagate_public_route_tables_vgw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_names (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_tags_per_az (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.putin_khuylo (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_group_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_group_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_names (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.reuse_nat_ips (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.secondary_cidr_blocks (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.single_nat_gateway (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.use_ipam_pool (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpc_flow_log_permissions_boundary (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpc_flow_log_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpc_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpn_gateway_az (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpn_gateway_id (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpn_gateway_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] output.data-bucket-arn (expand)" -> "[root] data.aws_s3_bucket.data_bucket (expand)"
		"[root] output.data-bucket-domain-name (expand)" -> "[root] data.aws_s3_bucket.data_bucket (expand)"
		"[root] output.data-bucket-region (expand)" -> "[root] data.aws_s3_bucket.data_bucket (expand)"
		"[root] output.local_num_max_value (expand)" -> "[root] local.maximum (expand)"
		"[root] output.local_num_min_value (expand)" -> "[root] local.minimum (expand)"
		"[root] output.module_asg_max_size (expand)" -> "[root] module.autoscaling.output.autoscaling_group_max_size (expand)"
		"[root] output.module_ec2_instance_public_dns (expand)" -> "[root] module.server.output.public_dns (expand)"
		"[root] output.module_ec2_instance_public_ip (expand)" -> "[root] module.server.output.public_ip (expand)"
		"[root] output.module_ec2_instance_type (expand)" -> "[root] module.server.output.instance_type (expand)"
		"[root] output.module_s3_bucket_name (expand)" -> "[root] module.s3-bucket.output.s3_bucket_bucket_domain_name (expand)"
		"[root] output.nonsensitive_my_number (expand)" -> "[root] local.my_number (expand)"
		"[root] output.res_ubuntu_server_public_ip (expand)" -> "[root] aws_instance.ubuntu_server (expand)"
		"[root] output.res_ubuntu_server_public_url (expand)" -> "[root] aws_instance.ubuntu_server (expand)"
		"[root] output.res_web_server_public_ip (expand)" -> "[root] aws_instance.web_server (expand)"
		"[root] output.res_web_server_public_url (expand)" -> "[root] aws_instance.web_server (expand)"
		"[root] output.sensitive_first_name (expand)" -> "[root] local.contact_info_sensitive (expand)"
		"[root] output.sensitive_last_name (expand)" -> "[root] local.contact_info_sensitive (expand)"
		"[root] output.sensitive_phone_number (expand)" -> "[root] local.contact_info_sensitive (expand)"
		"[root] output.valid_cloud (expand)" -> "[root] local.contact_info_valid (expand)"
		"[root] output.valid_cost_code (expand)" -> "[root] local.contact_info_valid (expand)"
		"[root] output.valid_department (expand)" -> "[root] local.contact_info_valid (expand)"
		"[root] output.valid_ip_address (expand)" -> "[root] local.contact_info_valid (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_policy.policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_instance.aws_linux (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_instance.ubuntu_server (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_instance.web_server (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_route_table_association.private (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_route_table_association.public (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_security_group.sg-dynamic-web-traffic-local (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_security_group.sg-dynamic-web-traffic-var (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_subnet.res_var_subnet (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_subnet.var_subnet_for_each (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_subnet.var_subnet_for_each_map (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_subnet.var_subnet_single (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] data.aws_region.current (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.autoscaling.aws_autoscaling_policy.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.autoscaling.aws_autoscaling_schedule.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.autoscaling.aws_iam_role_policy_attachment.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.s3-bucket.aws_s3_bucket_accelerate_configuration.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.s3-bucket.aws_s3_bucket_acl.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.s3-bucket.aws_s3_bucket_analytics_configuration.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.s3-bucket.aws_s3_bucket_cors_configuration.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.s3-bucket.aws_s3_bucket_intelligent_tiering_configuration.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.s3-bucket.aws_s3_bucket_inventory.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.s3-bucket.aws_s3_bucket_lifecycle_configuration.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.s3-bucket.aws_s3_bucket_logging.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.s3-bucket.aws_s3_bucket_metric.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.s3-bucket.aws_s3_bucket_object_lock_configuration.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.s3-bucket.aws_s3_bucket_replication_configuration.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.s3-bucket.aws_s3_bucket_request_payment_configuration.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.s3-bucket.aws_s3_bucket_server_side_encryption_configuration.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.s3-bucket.aws_s3_bucket_website_configuration.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.server.aws_instance.web_server (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.server_subnet_1.aws_instance.web (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_customer_gateway.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_db_subnet_group.database (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_default_network_acl.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_default_route_table.default (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_default_security_group.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_flow_log.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.database_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.database_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.private_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.private_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.public_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.public_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_redshift_subnet_group.redshift (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.database_internet_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.database_ipv6_egress (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.database_nat_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.private_ipv6_egress (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.private_nat_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.public_internet_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.database (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.elasticache (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.intra (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.outpost (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.private (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.public (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.redshift (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.redshift_public (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" -> "[root] var.aws_region"
		"[root] provider[\"registry.terraform.io/hashicorp/local\"] (close)" -> "[root] local_file.private_key_pem (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/tls\"] (close)" -> "[root] tls_private_key.generated (expand)"
		"[root] root" -> "[root] local.time (expand)"
		"[root] root" -> "[root] module.autoscaling (close)"
		"[root] root" -> "[root] module.s3-bucket (close)"
		"[root] root" -> "[root] module.server (close)"
		"[root] root" -> "[root] module.server_subnet_1 (close)"
		"[root] root" -> "[root] module.vpc (close)"
		"[root] root" -> "[root] output.data-bucket-arn (expand)"
		"[root] root" -> "[root] output.data-bucket-domain-name (expand)"
		"[root] root" -> "[root] output.data-bucket-region (expand)"
		"[root] root" -> "[root] output.local_num_max_value (expand)"
		"[root] root" -> "[root] output.local_num_min_value (expand)"
		"[root] root" -> "[root] output.module_asg_max_size (expand)"
		"[root] root" -> "[root] output.module_ec2_instance_public_dns (expand)"
		"[root] root" -> "[root] output.module_ec2_instance_public_ip (expand)"
		"[root] root" -> "[root] output.module_ec2_instance_type (expand)"
		"[root] root" -> "[root] output.module_s3_bucket_name (expand)"
		"[root] root" -> "[root] output.nonsensitive_my_number (expand)"
		"[root] root" -> "[root] output.res_ubuntu_server_public_ip (expand)"
		"[root] root" -> "[root] output.res_ubuntu_server_public_url (expand)"
		"[root] root" -> "[root] output.res_web_server_public_ip (expand)"
		"[root] root" -> "[root] output.res_web_server_public_url (expand)"
		"[root] root" -> "[root] output.sensitive_first_name (expand)"
		"[root] root" -> "[root] output.sensitive_last_name (expand)"
		"[root] root" -> "[root] output.sensitive_phone_number (expand)"
		"[root] root" -> "[root] output.valid_cloud (expand)"
		"[root] root" -> "[root] output.valid_cost_code (expand)"
		"[root] root" -> "[root] output.valid_department (expand)"
		"[root] root" -> "[root] output.valid_ip_address (expand)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/local\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/tls\"] (close)"
		"[root] tls_private_key.generated (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/tls\"]"
	}
}

